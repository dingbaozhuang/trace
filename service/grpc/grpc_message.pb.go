// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_message.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IPAddr               string   `protobuf:"bytes,2,opt,name=IPAddr,proto3" json:"IPAddr,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
	SspID                string   `protobuf:"bytes,4,opt,name=SspID,proto3" json:"SspID,omitempty"`
	SlotID               string   `protobuf:"bytes,5,opt,name=SlotID,proto3" json:"SlotID,omitempty"`
	AppID                string   `protobuf:"bytes,6,opt,name=AppID,proto3" json:"AppID,omitempty"`
	AdType               string   `protobuf:"bytes,7,opt,name=AdType,proto3" json:"AdType,omitempty"`
	SspAppIdKey          string   `protobuf:"bytes,8,opt,name=SspAppIdKey,proto3" json:"SspAppIdKey,omitempty"`
	SspAppPlaceIdKey     string   `protobuf:"bytes,9,opt,name=SspAppPlaceIdKey,proto3" json:"SspAppPlaceIdKey,omitempty"`
	SspAppSecretKey      string   `protobuf:"bytes,10,opt,name=SspAppSecretKey,proto3" json:"SspAppSecretKey,omitempty"`
	Timestamp            string   `protobuf:"bytes,11,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Type                 string   `protobuf:"bytes,12,opt,name=Type,proto3" json:"Type,omitempty"`
	SID                  string   `protobuf:"bytes,13,opt,name=SID,proto3" json:"SID,omitempty"`
	Uuid                 string   `protobuf:"bytes,14,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_36c8fc4a27b8b845, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Request) GetIPAddr() string {
	if m != nil {
		return m.IPAddr
	}
	return ""
}

func (m *Request) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Request) GetSspID() string {
	if m != nil {
		return m.SspID
	}
	return ""
}

func (m *Request) GetSlotID() string {
	if m != nil {
		return m.SlotID
	}
	return ""
}

func (m *Request) GetAppID() string {
	if m != nil {
		return m.AppID
	}
	return ""
}

func (m *Request) GetAdType() string {
	if m != nil {
		return m.AdType
	}
	return ""
}

func (m *Request) GetSspAppIdKey() string {
	if m != nil {
		return m.SspAppIdKey
	}
	return ""
}

func (m *Request) GetSspAppPlaceIdKey() string {
	if m != nil {
		return m.SspAppPlaceIdKey
	}
	return ""
}

func (m *Request) GetSspAppSecretKey() string {
	if m != nil {
		return m.SspAppSecretKey
	}
	return ""
}

func (m *Request) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *Request) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Request) GetSID() string {
	if m != nil {
		return m.SID
	}
	return ""
}

func (m *Request) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Response struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
	ID                   string   `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	IP                   string   `protobuf:"bytes,5,opt,name=IP,proto3" json:"IP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_36c8fc4a27b8b845, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *Response) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Response) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Response) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "grpc.Request")
	proto.RegisterType((*Response)(nil), "grpc.Response")
}

func init() { proto.RegisterFile("grpc_message.proto", fileDescriptor_36c8fc4a27b8b845) }

var fileDescriptor_36c8fc4a27b8b845 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x6d, 0x9a, 0xf4, 0xcf, 0xf4, 0x8f, 0x65, 0x10, 0x59, 0xc4, 0x43, 0xe9, 0xa9, 0x78,
	0xa8, 0xa2, 0xf8, 0x01, 0x8a, 0xf1, 0xb0, 0x58, 0x21, 0x24, 0xf1, 0x2c, 0x31, 0x59, 0x42, 0xa1,
	0xed, 0xae, 0xbb, 0xdb, 0x43, 0x3f, 0xb5, 0x5f, 0x41, 0x76, 0x36, 0x55, 0xd1, 0x93, 0xb7, 0xf7,
	0xde, 0xfc, 0x26, 0x2c, 0x6f, 0x02, 0x58, 0x6b, 0x55, 0xbe, 0x6e, 0x85, 0x31, 0x45, 0x2d, 0x16,
	0x4a, 0x4b, 0x2b, 0x31, 0x74, 0xd9, 0xec, 0x23, 0x80, 0x6e, 0x2a, 0xde, 0xf7, 0xc2, 0x58, 0x1c,
	0x43, 0xc0, 0x63, 0xd6, 0x9a, 0xb6, 0xe6, 0xfd, 0x34, 0xe0, 0x31, 0x9e, 0x43, 0x87, 0x27, 0xcb,
	0xaa, 0xd2, 0x2c, 0xa0, 0xac, 0x71, 0x38, 0x81, 0xf6, 0xb3, 0xa9, 0x59, 0x9b, 0x42, 0x27, 0xf1,
	0x0c, 0xa2, 0xcc, 0x28, 0x1e, 0xb3, 0x90, 0x32, 0x6f, 0xdc, 0x7e, 0xb6, 0x91, 0x96, 0xc7, 0x2c,
	0xf2, 0xfb, 0xde, 0x39, 0x7a, 0xa9, 0x1c, 0xdd, 0xf1, 0x34, 0x19, 0x47, 0x2f, 0xab, 0xfc, 0xa0,
	0x04, 0xeb, 0x7a, 0xda, 0x3b, 0x9c, 0xc2, 0x20, 0x33, 0xca, 0x31, 0xd5, 0x93, 0x38, 0xb0, 0x1e,
	0x0d, 0x7f, 0x46, 0x78, 0x05, 0x13, 0x6f, 0x93, 0x4d, 0x51, 0x0a, 0x8f, 0xf5, 0x09, 0xfb, 0x93,
	0xe3, 0x1c, 0x4e, 0x7d, 0x96, 0x89, 0x52, 0x0b, 0xeb, 0x50, 0x20, 0xf4, 0x77, 0x8c, 0x97, 0xd0,
	0xcf, 0xd7, 0x5b, 0x61, 0x6c, 0xb1, 0x55, 0x6c, 0x40, 0xcc, 0x77, 0x80, 0x08, 0x21, 0xbd, 0x75,
	0x48, 0x03, 0xd2, 0xae, 0x97, 0x8c, 0xc7, 0x6c, 0xe4, 0x7b, 0xc9, 0x78, 0xec, 0xa8, 0x97, 0xfd,
	0xba, 0x62, 0x63, 0x4f, 0x39, 0x3d, 0xab, 0xa0, 0x97, 0x0a, 0xa3, 0xe4, 0xce, 0x08, 0x37, 0x7f,
	0x90, 0x95, 0xa0, 0xce, 0xa3, 0x94, 0xb4, 0xfb, 0xca, 0xa3, 0x3e, 0x56, 0xee, 0x64, 0x73, 0x97,
	0xf6, 0xd7, 0x5d, 0x10, 0xc2, 0xb8, 0xb0, 0x45, 0x53, 0x36, 0x69, 0x62, 0x92, 0xa6, 0xe7, 0x80,
	0x27, 0xb7, 0x12, 0xa2, 0x5c, 0x17, 0xa5, 0xc0, 0x6b, 0x18, 0xe6, 0xba, 0xd8, 0x19, 0x25, 0xb5,
	0x5d, 0xc9, 0x1a, 0x47, 0x0b, 0x77, 0xf7, 0x45, 0x73, 0xf3, 0x8b, 0xf1, 0xd1, 0xfa, 0x17, 0xcd,
	0x4e, 0xf0, 0x1e, 0x26, 0xab, 0xb5, 0xb1, 0xff, 0x5a, 0xba, 0x69, 0xbd, 0x75, 0xe8, 0xaf, 0xba,
	0xfb, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x0d, 0x3c, 0x08, 0x6b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TraceClient is the client API for Trace service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TraceClient interface {
	TransportLog(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ListTransportLog(ctx context.Context, in *Request, opts ...grpc.CallOption) (Trace_ListTransportLogClient, error)
}

type traceClient struct {
	cc *grpc.ClientConn
}

func NewTraceClient(cc *grpc.ClientConn) TraceClient {
	return &traceClient{cc}
}

func (c *traceClient) TransportLog(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/grpc.Trace/TransportLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *traceClient) ListTransportLog(ctx context.Context, in *Request, opts ...grpc.CallOption) (Trace_ListTransportLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Trace_serviceDesc.Streams[0], "/grpc.Trace/ListTransportLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &traceListTransportLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Trace_ListTransportLogClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type traceListTransportLogClient struct {
	grpc.ClientStream
}

func (x *traceListTransportLogClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TraceServer is the server API for Trace service.
type TraceServer interface {
	TransportLog(context.Context, *Request) (*Response, error)
	ListTransportLog(*Request, Trace_ListTransportLogServer) error
}

func RegisterTraceServer(s *grpc.Server, srv TraceServer) {
	s.RegisterService(&_Trace_serviceDesc, srv)
}

func _Trace_TransportLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TraceServer).TransportLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Trace/TransportLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TraceServer).TransportLog(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trace_ListTransportLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TraceServer).ListTransportLog(m, &traceListTransportLogServer{stream})
}

type Trace_ListTransportLogServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type traceListTransportLogServer struct {
	grpc.ServerStream
}

func (x *traceListTransportLogServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _Trace_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Trace",
	HandlerType: (*TraceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransportLog",
			Handler:    _Trace_TransportLog_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListTransportLog",
			Handler:       _Trace_ListTransportLog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc_message.proto",
}
